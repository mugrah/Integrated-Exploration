<?xml version="1.0"?>
<!-- 
  Turtlebot navigation simulation:
  - stage
  - map_server
  - move_base
  - static map
  - amcl
  - rviz view
 -->
<launch>
  <!-- <arg name="base"       default="kobuki"/> -->  <!-- create, rhoomba -->
  <!-- <arg name="stacks"     default="hexagons"/> -->  <!-- circles, hexagons -->
  <!-- <arg name="3d_sensor"  default="asus_xtion_pro"/> -->  <!-- kinect, asus_xtion_pro -->

  <!-- Name of the map to use (without path nor extension) and initial position -->
  <!-- <arg name="map_file"       default="$(find turtlebot_stdr)/maps/sparse_obstacles.yaml"/> --> <!-- robopark_plan -->
  <!-- <arg name="world_file"     default="$(find turtlebot_stage)/maps/stage/maze.world"/> -->
  <arg name="world_file"     default="$(find pioneer3at)/world/exploration.world"/>
  <!-- <arg name="initial_pose_x" default="2.0"/>
  <arg name="initial_pose_y" default="2.0"/>
  <arg name="initial_pose_a" default="0.0"/> -->

  <param name="/use_sim_time" value="true"/>
  <!--  ******************** Stage ********************  -->
  <!-- 
        Publishes transforms:
          /base_link -> /base_laser
          /base_footprint -> /base_link (identity)
          /odom -> base_footprint
        Publishes topics:
          /odom : odometry data from the simulated odometry
          /base_scan : laser data from the simulated laser
          /base_pose_ground_truth : the ground truth pose
        Parameters:
          base_watchdog_timeout : time (s) after receiving the last command on cmd_vel before stopping the robot
        Args:
          -g : run in headless mode.
  --> 
  <node pkg="stage_ros" type="stageros" name="stageros" args="$(arg world_file)">
    <param name="base_watchdog_timeout" value="0.5"/>
    <!-- <remap from="odom" to="odom"/> -->
    <!-- <remap from="base_pose_ground_truth" to="base_pose_ground_truth"/> -->
    <!-- <remap from="cmd_vel" to="mobile_base/commands/velocity"/> -->
    <!-- <remap from="base_scan" to="scan"/> -->
  </node>

  <!--  ***************** Robot Model *****************  -->
  <!-- <include file="$(find turtlebot_bringup)/launch/includes/robot.launch.xml">
    <arg name="base" value="$(arg base)" />
    <arg name="stacks" value="$(arg stacks)" />
    <arg name="3d_sensor" value="$(arg 3d_sensor)" />
  </include>
  <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher">
    <param name="use_gui" value="false"/>
  </node> -->


  <arg name="urdf_file" default="$(find xacro)/xacro --inorder '$(find pioneer3at)/urdf/kobuki_hexagons_r200.urdf.xacro'"/>
  <param name="robot_description" command="$(arg urdf_file)"/>
  <!-- important generally, but specifically utilised by the current app manager -->  
  <param name="robot/name" value="$(optenv ROBOT turtlebot)"/>
  <param name="robot/type" value="turtlebot"/>
  <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher">
    <param name="publish_frequency" type="double" value="5.0" />
  </node>
  <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher">
    <param name="use_gui" value="false"/>
  </node>


  <!-- Command Velocity multiplexer -->
  <!-- <node pkg="nodelet" type="nodelet" name="mobile_base_nodelet_manager" args="manager"/>
  <node pkg="nodelet" type="nodelet" name="cmd_vel_mux" args="load yocs_cmd_vel_mux/CmdVelMuxNodelet mobile_base_nodelet_manager">
    <param name="yaml_cfg_file" value="$(find turtlebot_bringup)/param/mux.yaml"/>
    <remap from="cmd_vel_mux/output" to="mobile_base/commands/velocity"/>
  </node> -->

  <!--  ************** Navigation  ***************  -->
  <!-- <include file="$(find turtlebot_navigation)/launch/includes/move_base.launch.xml"/> -->

  <!--  ****** Maps *****  -->
  <!-- <node name="map_server" pkg="map_server" type="map_server" args="$(arg map_file)">
    <param name="frame_id" value="/map"/>
  </node> -->

  <!-- <include file="$(find turtlebot_navigation)/launch/includes/amcl/amcl.launch.xml">
    <arg name="scan_topic" value="scan"/>
    <arg name="use_map_topic" value="true"/>
    <arg name="initial_pose_x" value="$(arg initial_pose_x)"/>
    <arg name="initial_pose_y" value="$(arg initial_pose_y)"/>
    <arg name="initial_pose_a" value="$(arg initial_pose_a)"/>
  </include> -->

  <!--  **************** Visualisation ****************  -->
  <node name="rviz" pkg="rviz" type="rviz" args="-d $(find pioneer3at)/rviz/test_drift.rviz"/>

  <group ns="robot_0">
    <node name="teleop_twist_keyboard" pkg="teleop_twist_keyboard" type="teleop_twist_keyboard.py" output="screen" />
    <node name="laser_filter" pkg="pioneer3at" type="laser_filter.py" output="screen" />
  </group>
  
</launch>

