<launch>

  <!--<param name="robot_description" command="$(find xacro)/xacro.py $(find pioneer3at)/urdf/pioneer3at.xacro" />-->
    
    <group ns="robot1">

     <!-- **************************** Rosaria **************************** -->

      <node pkg="ROSARIA" type="RosAria" name="Pioneer3AT_rosaria">
          <param name="~tf_prefix" type="str" value="robot1"  />
          <param name="port"       type="str" value="/dev/ttyUSB1"/>

          <remap from="~pose"         to="/robot1/pose" />
          <remap from="~sonar"        to="/robot1/sonar" />
          <remap from="~cmd_vel"      to="/robot1/cmd_vel" />
          <remap from="~bumper_state" to="/robot1/bumper_state" />
        </node>
    
    <!-- **************************** Sick **************************** -->
       
      <node pkg="sicktoolbox_wrapper" type="sicklms" name="Pioneer3AT_sicklms" >
                <rosparam file="$(find pioneer3at)/config/sick_wrapper/LMS_200_multi.yaml" command="load" />
                <param name="frame_id" value="/robot1/laserscan" />
                <remap from="/robot1/scan" to="/robot1/laserscan" />
      </node>
        
                <!-- publish static transform from the center of the robot to the laser rangefinder (required for slam_gmapping) -->
        <node pkg="tf" type="static_transform_publisher" name="Pioneer3AT_laserscan_tf" args="0.17 0 0.4 0 0 0 /robot1/base_link /robot1/laserscan 33" />
  
    <!-- **************************** urdf **************************** -->    
       
       <node pkg="robot_state_publisher" type="state_publisher" name="Pioneer3AT_tf_broadcaster"> 
            <param name="tf_prefix" value="robot1"/>
            <param name="publish_frequency" type="double" value="20.0"/>
            
            <remap from="joint_states" to="/robot1/joint_states"/>
        </node>
  
        <node pkg="pioneer3at" type="joint_state_publisher" name="Pioneer3AT_joints_publisher">
            <param name="tf_future_date" type="double" value="0.05" />
            <param name="tf_prefix" value="robot1"/>
            <remap from="joint_states" to="/robot1/joint_states"/>
        </node>
        
          
    <!-- **************************** gmapping **************************** -->
       
      <!-- <node pkg="gmapping" type="slam_gmapping" name="Pioneer3AT_gmapping">
            
            <rosparam file="$(find pioneer3at)/config/gmapping/gmapping_multi.yaml" command="load" />
            <param name="base_frame" type="str" value="/robot1/base_link" />
            <param name="map_frame" type="str" value="/robot1/map" />
            <param name="odom_frame" type="str" value="/robot1/odom" />
            
            <param name="occ_map_frame_" type="str" value="occ_map" />
            <remap from="scan"          to="/robot1/laserscan"/>
            <remap from="map"           to="/robot1/gmapping_map"/>
            <remap from="map_metadata"  to="/robot1/map_metadata"/>
            <remap from="occ_map"       to="/robot1/occ_gmapping_map" />
        </node>-->
        
    
        
    

    <!-- **************************** ui **************************** -->        
        
       <!--<node pkg="rviz" type="rviz" name="Pioneer3AT_rviz" args="-d $(find pioneer3at)/config/rviz/settings_robot1.rviz"/>-->
        
        
          
    <!-- **************************** Camera Node **************************** -->
        
       <!-- <node pkg="usb_cam" type="usb_cam_node" name="usb_cam_node">
                <param name="video_device" type="string" value="/dev/video1"/>

                <param name="pixel_format" type="string" value="mjpeg" />
                <param name="io_method" type="string" value="mmap" />

                <param name="image_width" type="int" value="640" />
                <param name="image_height" type="int" value="480" />

                <param name="camera_frame_id" type="string" value="/robot1/usb_cam_frame" />
                <param name="camera_info_url" type="string" value="file://$(find usb_cam)/cal.yml" />
        </node> -->
        

        

    
    </group>
</launch>
